# Generated by Django 5.2.3 on 2025-10-04 05:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('drf', '0006_sentimentpost_session'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='cleaned_feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(blank=True, max_length=255, null=True)),
                ('service_type', models.CharField(blank=True, choices=[('Hybrid Seminar', 'Hybrid Seminar'), ('Material Requests', 'Material Requests'), ('Online Library', 'Online Library'), ('Library Tour', 'Library Tour')], max_length=255, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('quarter', models.CharField(blank=True, choices=[('First Quarter', 'First Quarter'), ('Second Quarter', 'Second Quarter'), ('Third Quarter', 'Third Quarter'), ('Fourth Quarter', 'Fourth Quarter')], max_length=255, null=True)),
                ('year', models.SmallIntegerField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=255, null=True)),
                ('category', models.CharField(blank=True, choices=[('Librarian/Library Staff', 'Librarian/Library Staff'), ('Students', 'Students'), ('Administrative Officer / Administrative Staff', 'Administrative Officer / Administrative Staff'), ('Teachers / Teaching Personnel / Professors', 'Teachers / Teaching Personnel / Professors')], max_length=255, null=True)),
                ('typeoflibrary', models.CharField(blank=True, choices=[('Non-library Institution', 'Non-library Institution'), ('Academic Library', 'Academic Library'), ('School Library', 'School Library'), ('Public Library', 'Public Library')], max_length=255, null=True)),
                ('region', models.CharField(blank=True, choices=[('NCR', 'NCR'), ('CAR', 'CAR'), ('Region I', 'Region I'), ('Region II', 'Region II'), ('Region III', 'Region III'), ('Region IV-A', 'Region IV-A'), ('MIMAROPA', 'MIMAROPA'), ('Region V', 'Region V'), ('Region VI', 'Region VI'), ('Region VII', 'Region VII'), ('Region VIII', 'Region VIII'), ('Region IX', 'Region IX'), ('Region X', 'Region X'), ('Region XI', 'Region XI'), ('Region XII', 'Region XII'), ('Region XIII', 'Region XIII'), ('BARMM', 'BARMM')], max_length=255, null=True)),
                ('key_takeaways', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('suggestions', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='labeled_feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sentiment', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Neutral', 'Neutral'), ('Negative', 'Negative')], max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drf.cleaned_feedback')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='archivepost',
            name='author',
        ),
        migrations.DeleteModel(
            name='SentimentPost',
        ),
        migrations.DeleteModel(
            name='ArchivePost',
        ),
    ]
